/*
 * Goddard.ToursWebApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using FranchiseePortal.ToursWebApiClient.Api;
using FranchiseePortal.ToursWebApiClient.Model;
using FranchiseePortal.ToursWebApiClient.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace FranchiseePortal.ToursWebApiClient.Test.Model
{
    /// <summary>
    ///  Class for testing TourInputDto
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class TourInputDtoTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for TourInputDto
        //private TourInputDto instance;

        public TourInputDtoTests()
        {
            // TODO uncomment below to create an instance of TourInputDto
            //instance = new TourInputDto();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of TourInputDto
        /// </summary>
        [Fact]
        public void TourInputDtoInstanceTest()
        {
            // TODO uncomment below to test "IsType" TourInputDto
            //Assert.IsType<TourInputDto>(instance);
        }


        /// <summary>
        /// Test the property 'LeadId'
        /// </summary>
        [Fact]
        public void LeadIdTest()
        {
            // TODO unit test for the property 'LeadId'
        }
        /// <summary>
        /// Test the property 'Notes'
        /// </summary>
        [Fact]
        public void NotesTest()
        {
            // TODO unit test for the property 'Notes'
        }
        /// <summary>
        /// Test the property 'TourStartDate'
        /// </summary>
        [Fact]
        public void TourStartDateTest()
        {
            // TODO unit test for the property 'TourStartDate'
        }
        /// <summary>
        /// Test the property 'TourEndDate'
        /// </summary>
        [Fact]
        public void TourEndDateTest()
        {
            // TODO unit test for the property 'TourEndDate'
        }
        /// <summary>
        /// Test the property 'Type'
        /// </summary>
        [Fact]
        public void TypeTest()
        {
            // TODO unit test for the property 'Type'
        }
        /// <summary>
        /// Test the property 'Status'
        /// </summary>
        [Fact]
        public void StatusTest()
        {
            // TODO unit test for the property 'Status'
        }
        /// <summary>
        /// Test the property 'GuideId'
        /// </summary>
        [Fact]
        public void GuideIdTest()
        {
            // TODO unit test for the property 'GuideId'
        }
        /// <summary>
        /// Test the property 'ClassRoom'
        /// </summary>
        [Fact]
        public void ClassRoomTest()
        {
            // TODO unit test for the property 'ClassRoom'
        }
        /// <summary>
        /// Test the property 'FollowUpTimeFrame'
        /// </summary>
        [Fact]
        public void FollowUpTimeFrameTest()
        {
            // TODO unit test for the property 'FollowUpTimeFrame'
        }
        /// <summary>
        /// Test the property 'CancellationReasonId'
        /// </summary>
        [Fact]
        public void CancellationReasonIdTest()
        {
            // TODO unit test for the property 'CancellationReasonId'
        }
        /// <summary>
        /// Test the property 'Viewed'
        /// </summary>
        [Fact]
        public void ViewedTest()
        {
            // TODO unit test for the property 'Viewed'
        }

    }

}
