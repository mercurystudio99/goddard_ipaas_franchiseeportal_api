/*
 * Goddard iPaaS Leads API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = FranchiseePortal.LeadsWebApiClient.Client.OpenAPIDateConverter;

namespace FranchiseePortal.LeadsWebApiClient.Model
{
    /// <summary>
    /// Defines ReferredBy
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum ReferredBy
    {
        /// <summary>
        /// Enum Blog for value: Blog
        /// </summary>
        [EnumMember(Value = "Blog")]
        Blog = 1,

        /// <summary>
        /// Enum CommunityEvent for value: CommunityEvent
        /// </summary>
        [EnumMember(Value = "CommunityEvent")]
        CommunityEvent = 2,

        /// <summary>
        /// Enum Facebook for value: Facebook
        /// </summary>
        [EnumMember(Value = "Facebook")]
        Facebook = 3,

        /// <summary>
        /// Enum Internet for value: Internet
        /// </summary>
        [EnumMember(Value = "Internet")]
        Internet = 4,

        /// <summary>
        /// Enum News for value: News
        /// </summary>
        [EnumMember(Value = "News")]
        News = 5,

        /// <summary>
        /// Enum OpenHouse for value: OpenHouse
        /// </summary>
        [EnumMember(Value = "OpenHouse")]
        OpenHouse = 6,

        /// <summary>
        /// Enum Postcard for value: Postcard
        /// </summary>
        [EnumMember(Value = "Postcard")]
        Postcard = 7,

        /// <summary>
        /// Enum PrCoverage for value: PrCoverage
        /// </summary>
        [EnumMember(Value = "PrCoverage")]
        PrCoverage = 8,

        /// <summary>
        /// Enum PrintAd for value: PrintAd
        /// </summary>
        [EnumMember(Value = "PrintAd")]
        PrintAd = 9,

        /// <summary>
        /// Enum Radio for value: Radio
        /// </summary>
        [EnumMember(Value = "Radio")]
        Radio = 10,

        /// <summary>
        /// Enum Referral for value: Referral
        /// </summary>
        [EnumMember(Value = "Referral")]
        Referral = 11,

        /// <summary>
        /// Enum Sign for value: Sign
        /// </summary>
        [EnumMember(Value = "Sign")]
        Sign = 12,

        /// <summary>
        /// Enum TvCommercial for value: TvCommercial
        /// </summary>
        [EnumMember(Value = "TvCommercial")]
        TvCommercial = 13,

        /// <summary>
        /// Enum Twitter for value: Twitter
        /// </summary>
        [EnumMember(Value = "Twitter")]
        Twitter = 14,

        /// <summary>
        /// Enum YellowPages for value: YellowPages
        /// </summary>
        [EnumMember(Value = "YellowPages")]
        YellowPages = 15,

        /// <summary>
        /// Enum Other for value: Other
        /// </summary>
        [EnumMember(Value = "Other")]
        Other = 16,

        /// <summary>
        /// Enum EmployeeFamily for value: EmployeeFamily
        /// </summary>
        [EnumMember(Value = "EmployeeFamily")]
        EmployeeFamily = 17

    }

}
