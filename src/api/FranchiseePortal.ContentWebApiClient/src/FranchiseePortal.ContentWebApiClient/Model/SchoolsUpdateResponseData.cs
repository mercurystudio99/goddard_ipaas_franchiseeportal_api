/*
 * Goddard.ContentWebApi
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = FranchiseePortal.ContentWebApiClient.Client.OpenAPIDateConverter;

namespace FranchiseePortal.ContentWebApiClient.Model
{
    /// <summary>
    /// SchoolsUpdateResponseData
    /// </summary>
    [DataContract(Name = "SchoolsUpdateResponseData")]
    public partial class SchoolsUpdateResponseData : IEquatable<SchoolsUpdateResponseData>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="SchoolsUpdateResponseData" /> class.
        /// </summary>
        /// <param name="crmId">crmId.</param>
        /// <param name="heroImage">heroImage.</param>
        /// <param name="searchResultDetailImage">searchResultDetailImage.</param>
        public SchoolsUpdateResponseData(string crmId = default(string), string heroImage = default(string), string searchResultDetailImage = default(string))
        {
            this.CrmId = crmId;
            this.HeroImage = heroImage;
            this.SearchResultDetailImage = searchResultDetailImage;
        }

        /// <summary>
        /// Gets or Sets CrmId
        /// </summary>
        [DataMember(Name = "crmId", EmitDefaultValue = true)]
        public string CrmId { get; set; }

        /// <summary>
        /// Gets or Sets HeroImage
        /// </summary>
        [DataMember(Name = "heroImage", EmitDefaultValue = true)]
        public string HeroImage { get; set; }

        /// <summary>
        /// Gets or Sets SearchResultDetailImage
        /// </summary>
        [DataMember(Name = "searchResultDetailImage", EmitDefaultValue = true)]
        public string SearchResultDetailImage { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class SchoolsUpdateResponseData {\n");
            sb.Append("  CrmId: ").Append(CrmId).Append("\n");
            sb.Append("  HeroImage: ").Append(HeroImage).Append("\n");
            sb.Append("  SearchResultDetailImage: ").Append(SearchResultDetailImage).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as SchoolsUpdateResponseData);
        }

        /// <summary>
        /// Returns true if SchoolsUpdateResponseData instances are equal
        /// </summary>
        /// <param name="input">Instance of SchoolsUpdateResponseData to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(SchoolsUpdateResponseData input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.CrmId == input.CrmId ||
                    (this.CrmId != null &&
                    this.CrmId.Equals(input.CrmId))
                ) && 
                (
                    this.HeroImage == input.HeroImage ||
                    (this.HeroImage != null &&
                    this.HeroImage.Equals(input.HeroImage))
                ) && 
                (
                    this.SearchResultDetailImage == input.SearchResultDetailImage ||
                    (this.SearchResultDetailImage != null &&
                    this.SearchResultDetailImage.Equals(input.SearchResultDetailImage))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.CrmId != null)
                {
                    hashCode = (hashCode * 59) + this.CrmId.GetHashCode();
                }
                if (this.HeroImage != null)
                {
                    hashCode = (hashCode * 59) + this.HeroImage.GetHashCode();
                }
                if (this.SearchResultDetailImage != null)
                {
                    hashCode = (hashCode * 59) + this.SearchResultDetailImage.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
