/*
 * Goddard.FMS.Faculty
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = FranchiseePortal.FacultiesWebApiClient.Client.OpenAPIDateConverter;

namespace FranchiseePortal.FacultiesWebApiClient.Model
{
    /// <summary>
    /// PostFacultyBiosRequest
    /// </summary>
    [DataContract(Name = "PostFacultyBiosRequest")]
    public partial class PostFacultyBiosRequest : IEquatable<PostFacultyBiosRequest>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="PostFacultyBiosRequest" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected PostFacultyBiosRequest() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="PostFacultyBiosRequest" /> class.
        /// </summary>
        /// <param name="id">id (required).</param>
        /// <param name="fmsSchoolId">fmsSchoolId (required).</param>
        /// <param name="employmentStatus">employmentStatus.</param>
        /// <param name="jobCategory">jobCategory.</param>
        /// <param name="biography">biography (required).</param>
        /// <param name="photoUrl">photoUrl.</param>
        /// <param name="salutation">salutation.</param>
        /// <param name="givenName">givenName (required).</param>
        /// <param name="ordinal">ordinal.</param>
        /// <param name="displayOnWebsite">displayOnWebsite.</param>
        /// <param name="spotlightHeading">spotlightHeading.</param>
        /// <param name="spotlightPhotoUrl">spotlightPhotoUrl.</param>
        /// <param name="spotlightBiography">spotlightBiography.</param>
        /// <param name="isSpotlighted">isSpotlighted.</param>
        /// <param name="jobTitle">jobTitle.</param>
        public PostFacultyBiosRequest(long id = default(long), long fmsSchoolId = default(long), string employmentStatus = default(string), string jobCategory = default(string), string biography = default(string), string photoUrl = default(string), string salutation = default(string), string givenName = default(string), long ordinal = default(long), bool displayOnWebsite = default(bool), string spotlightHeading = default(string), string spotlightPhotoUrl = default(string), string spotlightBiography = default(string), bool isSpotlighted = default(bool), string jobTitle = default(string))
        {
            this.Id = id;
            this.FmsSchoolId = fmsSchoolId;
            // to ensure "biography" is required (not null)
            if (biography == null)
            {
                throw new ArgumentNullException("biography is a required property for PostFacultyBiosRequest and cannot be null");
            }
            this.Biography = biography;

            // to ensure "givenName" is required (not null)
            if (givenName == null)
            {
                throw new ArgumentNullException("givenName is a required property for PostFacultyBiosRequest and cannot be null");
            }
            this.GivenName = givenName;
            this.EmploymentStatus = employmentStatus;
            this.JobCategory = jobCategory;
            this.PhotoUrl = photoUrl;
            this.Salutation = salutation;
            this.Ordinal = ordinal;
            this.DisplayOnWebsite = displayOnWebsite;
            this.SpotlightHeading = spotlightHeading;
            this.SpotlightPhotoUrl = spotlightPhotoUrl;
            this.SpotlightBiography = spotlightBiography;
            this.IsSpotlighted = isSpotlighted;
            this.JobTitle = jobTitle;
        }

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name = "id", IsRequired = true, EmitDefaultValue = false)]
        public long Id { get; set; }

        /// <summary>
        /// Gets or Sets FmsSchoolId
        /// </summary>
        [DataMember(Name = "fmsSchoolId", IsRequired = true, EmitDefaultValue = false)]
        public long FmsSchoolId { get; set; }

        /// <summary>
        /// Gets or Sets EmploymentStatus
        /// </summary>
        [DataMember(Name = "employmentStatus", EmitDefaultValue = true)]
        public string EmploymentStatus { get; set; }

        /// <summary>
        /// Gets or Sets JobCategory
        /// </summary>
        [DataMember(Name = "jobCategory", EmitDefaultValue = true)]
        public string JobCategory { get; set; }

        /// <summary>
        /// Gets or Sets Biography
        /// </summary>
        [DataMember(Name = "biography", IsRequired = true, EmitDefaultValue = false)]
        public string Biography { get; set; }

        /// <summary>
        /// Gets or Sets PhotoUrl
        /// </summary>
        [DataMember(Name = "photoUrl", EmitDefaultValue = true)]
        public string PhotoUrl { get; set; }

        /// <summary>
        /// Gets or Sets Salutation
        /// </summary>
        [DataMember(Name = "salutation", EmitDefaultValue = true)]
        public string Salutation { get; set; }

        /// <summary>
        /// Gets or Sets GivenName
        /// </summary>
        [DataMember(Name = "givenName", IsRequired = true, EmitDefaultValue = false)]
        public string GivenName { get; set; }

        /// <summary>
        /// Gets or Sets Ordinal
        /// </summary>
        [DataMember(Name = "ordinal", EmitDefaultValue = false)]
        public long Ordinal { get; set; }

        /// <summary>
        /// Gets or Sets DisplayOnWebsite
        /// </summary>
        [DataMember(Name = "displayOnWebsite", EmitDefaultValue = true)]
        public bool DisplayOnWebsite { get; set; }

        /// <summary>
        /// Gets or Sets SpotlightHeading
        /// </summary>
        [DataMember(Name = "spotlightHeading", EmitDefaultValue = true)]
        public string SpotlightHeading { get; set; }

        /// <summary>
        /// Gets or Sets SpotlightPhotoUrl
        /// </summary>
        [DataMember(Name = "spotlightPhotoUrl", EmitDefaultValue = true)]
        public string SpotlightPhotoUrl { get; set; }

        /// <summary>
        /// Gets or Sets SpotlightBiography
        /// </summary>
        [DataMember(Name = "spotlightBiography", EmitDefaultValue = true)]
        public string SpotlightBiography { get; set; }

        /// <summary>
        /// Gets or Sets IsSpotlighted
        /// </summary>
        [DataMember(Name = "isSpotlighted", EmitDefaultValue = true)]
        public bool IsSpotlighted { get; set; }

        /// <summary>
        /// Gets or Sets JobTitle
        /// </summary>
        [DataMember(Name = "jobTitle", EmitDefaultValue = true)]
        public string JobTitle { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class PostFacultyBiosRequest {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  FmsSchoolId: ").Append(FmsSchoolId).Append("\n");
            sb.Append("  EmploymentStatus: ").Append(EmploymentStatus).Append("\n");
            sb.Append("  JobCategory: ").Append(JobCategory).Append("\n");
            sb.Append("  Biography: ").Append(Biography).Append("\n");
            sb.Append("  PhotoUrl: ").Append(PhotoUrl).Append("\n");
            sb.Append("  Salutation: ").Append(Salutation).Append("\n");
            sb.Append("  GivenName: ").Append(GivenName).Append("\n");
            sb.Append("  Ordinal: ").Append(Ordinal).Append("\n");
            sb.Append("  DisplayOnWebsite: ").Append(DisplayOnWebsite).Append("\n");
            sb.Append("  SpotlightHeading: ").Append(SpotlightHeading).Append("\n");
            sb.Append("  SpotlightPhotoUrl: ").Append(SpotlightPhotoUrl).Append("\n");
            sb.Append("  SpotlightBiography: ").Append(SpotlightBiography).Append("\n");
            sb.Append("  IsSpotlighted: ").Append(IsSpotlighted).Append("\n");
            sb.Append("  JobTitle: ").Append(JobTitle).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as PostFacultyBiosRequest);
        }

        /// <summary>
        /// Returns true if PostFacultyBiosRequest instances are equal
        /// </summary>
        /// <param name="input">Instance of PostFacultyBiosRequest to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(PostFacultyBiosRequest input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.Id == input.Id ||
                    this.Id.Equals(input.Id)
                ) && 
                (
                    this.FmsSchoolId == input.FmsSchoolId ||
                    this.FmsSchoolId.Equals(input.FmsSchoolId)
                ) && 
                (
                    this.EmploymentStatus == input.EmploymentStatus ||
                    (this.EmploymentStatus != null &&
                    this.EmploymentStatus.Equals(input.EmploymentStatus))
                ) && 
                (
                    this.JobCategory == input.JobCategory ||
                    (this.JobCategory != null &&
                    this.JobCategory.Equals(input.JobCategory))
                ) && 
                (
                    this.Biography == input.Biography ||
                    (this.Biography != null &&
                    this.Biography.Equals(input.Biography))
                ) && 
                (
                    this.PhotoUrl == input.PhotoUrl ||
                    (this.PhotoUrl != null &&
                    this.PhotoUrl.Equals(input.PhotoUrl))
                ) && 
                (
                    this.Salutation == input.Salutation ||
                    (this.Salutation != null &&
                    this.Salutation.Equals(input.Salutation))
                ) && 
                (
                    this.GivenName == input.GivenName ||
                    (this.GivenName != null &&
                    this.GivenName.Equals(input.GivenName))
                ) && 
                (
                    this.Ordinal == input.Ordinal ||
                    this.Ordinal.Equals(input.Ordinal)
                ) && 
                (
                    this.DisplayOnWebsite == input.DisplayOnWebsite ||
                    this.DisplayOnWebsite.Equals(input.DisplayOnWebsite)
                ) && 
                (
                    this.SpotlightHeading == input.SpotlightHeading ||
                    (this.SpotlightHeading != null &&
                    this.SpotlightHeading.Equals(input.SpotlightHeading))
                ) && 
                (
                    this.SpotlightPhotoUrl == input.SpotlightPhotoUrl ||
                    (this.SpotlightPhotoUrl != null &&
                    this.SpotlightPhotoUrl.Equals(input.SpotlightPhotoUrl))
                ) && 
                (
                    this.SpotlightBiography == input.SpotlightBiography ||
                    (this.SpotlightBiography != null &&
                    this.SpotlightBiography.Equals(input.SpotlightBiography))
                ) && 
                (
                    this.IsSpotlighted == input.IsSpotlighted ||
                    this.IsSpotlighted.Equals(input.IsSpotlighted)
                ) && 
                (
                    this.JobTitle == input.JobTitle ||
                    (this.JobTitle != null &&
                    this.JobTitle.Equals(input.JobTitle))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                hashCode = (hashCode * 59) + this.Id.GetHashCode();
                hashCode = (hashCode * 59) + this.FmsSchoolId.GetHashCode();
                if (this.EmploymentStatus != null)
                {
                    hashCode = (hashCode * 59) + this.EmploymentStatus.GetHashCode();
                }
                if (this.JobCategory != null)
                {
                    hashCode = (hashCode * 59) + this.JobCategory.GetHashCode();
                }
                if (this.Biography != null)
                {
                    hashCode = (hashCode * 59) + this.Biography.GetHashCode();
                }
                if (this.PhotoUrl != null)
                {
                    hashCode = (hashCode * 59) + this.PhotoUrl.GetHashCode();
                }
                if (this.Salutation != null)
                {
                    hashCode = (hashCode * 59) + this.Salutation.GetHashCode();
                }
                if (this.GivenName != null)
                {
                    hashCode = (hashCode * 59) + this.GivenName.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.Ordinal.GetHashCode();
                hashCode = (hashCode * 59) + this.DisplayOnWebsite.GetHashCode();
                if (this.SpotlightHeading != null)
                {
                    hashCode = (hashCode * 59) + this.SpotlightHeading.GetHashCode();
                }
                if (this.SpotlightPhotoUrl != null)
                {
                    hashCode = (hashCode * 59) + this.SpotlightPhotoUrl.GetHashCode();
                }
                if (this.SpotlightBiography != null)
                {
                    hashCode = (hashCode * 59) + this.SpotlightBiography.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.IsSpotlighted.GetHashCode();
                if (this.JobTitle != null)
                {
                    hashCode = (hashCode * 59) + this.JobTitle.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
