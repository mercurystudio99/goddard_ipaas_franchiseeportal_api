/*
 * Goddard.FMS.SchoolEvents
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using FranchiseePortal.SchoolEventsWebApiClient.Api;
using FranchiseePortal.SchoolEventsWebApiClient.Model;
using FranchiseePortal.SchoolEventsWebApiClient.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace FranchiseePortal.SchoolEventsWebApiClient.Test.Model
{
    /// <summary>
    ///  Class for testing PostEvents
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class PostEventsTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for PostEvents
        //private PostEvents instance;

        public PostEventsTests()
        {
            // TODO uncomment below to create an instance of PostEvents
            //instance = new PostEvents();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of PostEvents
        /// </summary>
        [Fact]
        public void PostEventsInstanceTest()
        {
            // TODO uncomment below to test "IsType" PostEvents
            //Assert.IsType<PostEvents>(instance);
        }


        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Fact]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }
        /// <summary>
        /// Test the property 'FmsSchoolId'
        /// </summary>
        [Fact]
        public void FmsSchoolIdTest()
        {
            // TODO unit test for the property 'FmsSchoolId'
        }
        /// <summary>
        /// Test the property 'Title'
        /// </summary>
        [Fact]
        public void TitleTest()
        {
            // TODO unit test for the property 'Title'
        }
        /// <summary>
        /// Test the property 'StartDateTime'
        /// </summary>
        [Fact]
        public void StartDateTimeTest()
        {
            // TODO unit test for the property 'StartDateTime'
        }
        /// <summary>
        /// Test the property 'EndDateTime'
        /// </summary>
        [Fact]
        public void EndDateTimeTest()
        {
            // TODO unit test for the property 'EndDateTime'
        }
        /// <summary>
        /// Test the property 'IsAllDay'
        /// </summary>
        [Fact]
        public void IsAllDayTest()
        {
            // TODO unit test for the property 'IsAllDay'
        }
        /// <summary>
        /// Test the property 'IsShownOnPublicWebsite'
        /// </summary>
        [Fact]
        public void IsShownOnPublicWebsiteTest()
        {
            // TODO unit test for the property 'IsShownOnPublicWebsite'
        }
        /// <summary>
        /// Test the property 'IsHighlighted'
        /// </summary>
        [Fact]
        public void IsHighlightedTest()
        {
            // TODO unit test for the property 'IsHighlighted'
        }
        /// <summary>
        /// Test the property 'IconFileName'
        /// </summary>
        [Fact]
        public void IconFileNameTest()
        {
            // TODO unit test for the property 'IconFileName'
        }
        /// <summary>
        /// Test the property 'Description'
        /// </summary>
        [Fact]
        public void DescriptionTest()
        {
            // TODO unit test for the property 'Description'
        }
        /// <summary>
        /// Test the property 'CreatedByUserId'
        /// </summary>
        [Fact]
        public void CreatedByUserIdTest()
        {
            // TODO unit test for the property 'CreatedByUserId'
        }
        /// <summary>
        /// Test the property 'PublicWebSiteDescription'
        /// </summary>
        [Fact]
        public void PublicWebSiteDescriptionTest()
        {
            // TODO unit test for the property 'PublicWebSiteDescription'
        }
        /// <summary>
        /// Test the property 'RecurringParameterPrimary'
        /// </summary>
        [Fact]
        public void RecurringParameterPrimaryTest()
        {
            // TODO unit test for the property 'RecurringParameterPrimary'
        }
        /// <summary>
        /// Test the property 'RecurringParameterSecondary'
        /// </summary>
        [Fact]
        public void RecurringParameterSecondaryTest()
        {
            // TODO unit test for the property 'RecurringParameterSecondary'
        }
        /// <summary>
        /// Test the property 'RecurringParameterFirst'
        /// </summary>
        [Fact]
        public void RecurringParameterFirstTest()
        {
            // TODO unit test for the property 'RecurringParameterFirst'
        }
        /// <summary>
        /// Test the property 'RecurringParameterSecond'
        /// </summary>
        [Fact]
        public void RecurringParameterSecondTest()
        {
            // TODO unit test for the property 'RecurringParameterSecond'
        }
        /// <summary>
        /// Test the property 'RecurringParameterThird'
        /// </summary>
        [Fact]
        public void RecurringParameterThirdTest()
        {
            // TODO unit test for the property 'RecurringParameterThird'
        }
        /// <summary>
        /// Test the property 'RecurringParameterFourth'
        /// </summary>
        [Fact]
        public void RecurringParameterFourthTest()
        {
            // TODO unit test for the property 'RecurringParameterFourth'
        }
        /// <summary>
        /// Test the property 'RecurringParameterRangeStart'
        /// </summary>
        [Fact]
        public void RecurringParameterRangeStartTest()
        {
            // TODO unit test for the property 'RecurringParameterRangeStart'
        }
        /// <summary>
        /// Test the property 'RecurringParameterRangeType'
        /// </summary>
        [Fact]
        public void RecurringParameterRangeTypeTest()
        {
            // TODO unit test for the property 'RecurringParameterRangeType'
        }
        /// <summary>
        /// Test the property 'RecurringParameterRangeQualifier'
        /// </summary>
        [Fact]
        public void RecurringParameterRangeQualifierTest()
        {
            // TODO unit test for the property 'RecurringParameterRangeQualifier'
        }
        /// <summary>
        /// Test the property 'ActiveFlag'
        /// </summary>
        [Fact]
        public void ActiveFlagTest()
        {
            // TODO unit test for the property 'ActiveFlag'
        }

    }

}
