/*
 * Goddard.FMS.SchoolTestimonials
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = FranchiseePortal.TestimonialsWebApiClient.Client.OpenAPIDateConverter;

namespace FranchiseePortal.TestimonialsWebApiClient.Model
{
    /// <summary>
    /// GetUnpublishedTestimonialResult
    /// </summary>
    [DataContract(Name = "GetUnpublishedTestimonialResult")]
    public partial class GetUnpublishedTestimonialResult : IEquatable<GetUnpublishedTestimonialResult>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="GetUnpublishedTestimonialResult" /> class.
        /// </summary>
        /// <param name="content">content.</param>
        /// <param name="fmsResponseId">fmsResponseId.</param>
        /// <param name="parentId">parentId.</param>
        /// <param name="fmsSchoolId">fmsSchoolId.</param>
        /// <param name="responseDate">responseDate.</param>
        /// <param name="relationship">relationship.</param>
        /// <param name="score">score.</param>
        /// <param name="systinoSurveyResponseId">systinoSurveyResponseId.</param>
        /// <param name="parent">parent.</param>
        /// <param name="children">children.</param>
        public GetUnpublishedTestimonialResult(string content = default(string), long fmsResponseId = default(long), long parentId = default(long), long fmsSchoolId = default(long), DateTime responseDate = default(DateTime), string relationship = default(string), int score = default(int), string systinoSurveyResponseId = default(string), string parent = default(string), string children = default(string))
        {
            this.Content = content;
            this.FmsResponseId = fmsResponseId;
            this.ParentId = parentId;
            this.FmsSchoolId = fmsSchoolId;
            this.ResponseDate = responseDate;
            this.Relationship = relationship;
            this.Score = score;
            this.SystinoSurveyResponseId = systinoSurveyResponseId;
            this.Parent = parent;
            this.Children = children;
        }

        /// <summary>
        /// Gets or Sets Content
        /// </summary>
        [DataMember(Name = "content", EmitDefaultValue = true)]
        public string Content { get; set; }

        /// <summary>
        /// Gets or Sets FmsResponseId
        /// </summary>
        [DataMember(Name = "fmsResponseId", EmitDefaultValue = false)]
        public long FmsResponseId { get; set; }

        /// <summary>
        /// Gets or Sets ParentId
        /// </summary>
        [DataMember(Name = "parentId", EmitDefaultValue = false)]
        public long ParentId { get; set; }

        /// <summary>
        /// Gets or Sets FmsSchoolId
        /// </summary>
        [DataMember(Name = "fmsSchoolId", EmitDefaultValue = false)]
        public long FmsSchoolId { get; set; }

        /// <summary>
        /// Gets or Sets ResponseDate
        /// </summary>
        [DataMember(Name = "responseDate", EmitDefaultValue = false)]
        public DateTime ResponseDate { get; set; }

        /// <summary>
        /// Gets or Sets Relationship
        /// </summary>
        [DataMember(Name = "relationship", EmitDefaultValue = true)]
        public string Relationship { get; set; }

        /// <summary>
        /// Gets or Sets Score
        /// </summary>
        [DataMember(Name = "score", EmitDefaultValue = false)]
        public int Score { get; set; }

        /// <summary>
        /// Gets or Sets SystinoSurveyResponseId
        /// </summary>
        [DataMember(Name = "systinoSurveyResponseId", EmitDefaultValue = true)]
        public string SystinoSurveyResponseId { get; set; }

        /// <summary>
        /// Gets or Sets Parent
        /// </summary>
        [DataMember(Name = "parent", EmitDefaultValue = true)]
        public string Parent { get; set; }

        /// <summary>
        /// Gets or Sets Children
        /// </summary>
        [DataMember(Name = "children", EmitDefaultValue = true)]
        public string Children { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class GetUnpublishedTestimonialResult {\n");
            sb.Append("  Content: ").Append(Content).Append("\n");
            sb.Append("  FmsResponseId: ").Append(FmsResponseId).Append("\n");
            sb.Append("  ParentId: ").Append(ParentId).Append("\n");
            sb.Append("  FmsSchoolId: ").Append(FmsSchoolId).Append("\n");
            sb.Append("  ResponseDate: ").Append(ResponseDate).Append("\n");
            sb.Append("  Relationship: ").Append(Relationship).Append("\n");
            sb.Append("  Score: ").Append(Score).Append("\n");
            sb.Append("  SystinoSurveyResponseId: ").Append(SystinoSurveyResponseId).Append("\n");
            sb.Append("  Parent: ").Append(Parent).Append("\n");
            sb.Append("  Children: ").Append(Children).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as GetUnpublishedTestimonialResult);
        }

        /// <summary>
        /// Returns true if GetUnpublishedTestimonialResult instances are equal
        /// </summary>
        /// <param name="input">Instance of GetUnpublishedTestimonialResult to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(GetUnpublishedTestimonialResult input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Content == input.Content ||
                    (this.Content != null &&
                    this.Content.Equals(input.Content))
                ) && 
                (
                    this.FmsResponseId == input.FmsResponseId ||
                    this.FmsResponseId.Equals(input.FmsResponseId)
                ) && 
                (
                    this.ParentId == input.ParentId ||
                    this.ParentId.Equals(input.ParentId)
                ) && 
                (
                    this.FmsSchoolId == input.FmsSchoolId ||
                    this.FmsSchoolId.Equals(input.FmsSchoolId)
                ) && 
                (
                    this.ResponseDate == input.ResponseDate ||
                    (this.ResponseDate != null &&
                    this.ResponseDate.Equals(input.ResponseDate))
                ) && 
                (
                    this.Relationship == input.Relationship ||
                    (this.Relationship != null &&
                    this.Relationship.Equals(input.Relationship))
                ) && 
                (
                    this.Score == input.Score ||
                    this.Score.Equals(input.Score)
                ) && 
                (
                    this.SystinoSurveyResponseId == input.SystinoSurveyResponseId ||
                    (this.SystinoSurveyResponseId != null &&
                    this.SystinoSurveyResponseId.Equals(input.SystinoSurveyResponseId))
                ) && 
                (
                    this.Parent == input.Parent ||
                    (this.Parent != null &&
                    this.Parent.Equals(input.Parent))
                ) && 
                (
                    this.Children == input.Children ||
                    (this.Children != null &&
                    this.Children.Equals(input.Children))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Content != null)
                    hashCode = hashCode * 59 + this.Content.GetHashCode();
                hashCode = hashCode * 59 + this.FmsResponseId.GetHashCode();
                hashCode = hashCode * 59 + this.ParentId.GetHashCode();
                hashCode = hashCode * 59 + this.FmsSchoolId.GetHashCode();
                if (this.ResponseDate != null)
                    hashCode = hashCode * 59 + this.ResponseDate.GetHashCode();
                if (this.Relationship != null)
                    hashCode = hashCode * 59 + this.Relationship.GetHashCode();
                hashCode = hashCode * 59 + this.Score.GetHashCode();
                if (this.SystinoSurveyResponseId != null)
                    hashCode = hashCode * 59 + this.SystinoSurveyResponseId.GetHashCode();
                if (this.Parent != null)
                    hashCode = hashCode * 59 + this.Parent.GetHashCode();
                if (this.Children != null)
                    hashCode = hashCode * 59 + this.Children.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
