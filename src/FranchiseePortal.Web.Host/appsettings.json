{
  "ConnectionStrings": {
    "Default": "Server=localhost; Database=FranchiseePortalDb; Trusted_Connection=True;"
  },
  "AbpZeroLicenseCode": "00vlX5L0QoCmruV0wkbM9OcG5vQi4OmF22693999672671f0654fc724ddf55e7a18",
  "Abp": {
    "RedisCache": {
      "ConnectionString": "localhost",
      "DatabaseId": -1
    }
  },
  "App": {
    "ServerRootAddress": "https://localhost:44301/",
    "ClientRootAddress": "https://localhost:4200/",
    "CorsOrigins": "https://franchiseeportal-dev-useast-app.azurewebsites.net,http://localhost:4200,https://localhost:4200,http://localhost:9876,https://www-dev.i-goddard.com",
    "EnableSwagger": "true",
    "SwaggerEndPoint": "/swagger/v1/swagger.json",
    "AllowAnonymousSignalRConnection": "true",
    "HomePageUrl": "/index.html",
    "App.UserManagement.IsNewRegisteredUserActiveByDefault": "true",
    "App.UserManagement.SystemAlertMessage": null,
    "PageBaseUrlComment": "Url set on the returned html page so it can retrieve further assets from that page, normally set to a proxy address to avoid Adobe CORS issue",
    "PageBaseUrl": "https://www-stage.goddardschool.com/",
    // This should be the key that is defined for FBP-SERVER APIM Subscription
    "ApiKey": "{replaceInSecrets}",
    "Tours": {
      "Enabled": "False",
      "APIUrl": "https://ipaas-qa-useast-apim.azure-api.net/tours",
      "AllowedMaxOpenHouseParticipants": "[1,2,3,4,5]",
      "AllowedTourDurationOptionsInMinutes": "[30,60]"
    },
    "School": {
      "APIUrl": "https://ipaas-qa-useast-apim.azure-api.net/schools",
      "PageContentPath": ""
    },
    "Faculty": {
      "APIUrl": "https://ipaas-qa-useast-apim.azure-api.net/faculty",
      "PageContentPath": "/our-teachers"
    },
    "Features": {
      "APIUrl": "https://ipaas-qa-useast-apim.azure-api.net/SchoolFeatures"
    },
    "Testimonials": {
      "APIUrl": "https://ipaas-qa-useast-apim.azure-api.net/testimonials"
    },
    "Careers": {
      "APIUrl": "https://ipaas-qa-useast-apim.azure-api.net/careers"
    },
    "Content": {
      "APIUrl": "https://ipaas-qa-useast-apim.azure-api.net/content",
      "APIKey": ""
    },
    "Authorization": {
      "APIUrl": "https://ipaas-qa-useast-apim.azure-api.net/authorization",
      "APIKey": ""
    },
    "Events": {
      "APIUrl": "https://ipaas-qa-useast-apim.azure-api.net/SchoolEvents"
    },
    "SummerCamp": {
      "PageContentPath": "/our-school/special-programs/summer-camp"
    },
    "Leads": {
      "APIUrl": "https://ipaas-qa-useast-apim.azure-api.net/leads"
    },
    "SiteMarketingTools": {
      "Enabled": "False"
    }
  },
  // This needs to be configured in addition to the connection string for Serilog sink
  // so that request telemetry also works
  "ApplicationInsights": {
    // Not considered a secret: https://learn.microsoft.com/en-us/azure/azure-monitor/app/sdk-connection-string?tabs=dotnet5#is-the-connection-string-a-secret
    // DEV - ipaas-franchiseeportal-dev-useast-api    
    "ConnectionString": "InstrumentationKey=00f7a74d-8e35-4b5f-b0d8-1cc35cbf8de5;IngestionEndpoint=https://eastus-8.in.applicationinsights.azure.com/;LiveEndpoint=https://eastus.livediagnostics.monitor.azure.com/"
  },
  "Authentication": {
    "AllowSocialLoginSettingsPerTenant": false,
    "Facebook": {
      "IsEnabled": "false",
      "AppId": "",
      "AppSecret": ""
    },
    "Twitter": {
      "IsEnabled": "false",
      "ApiKey": "",
      "ApiKeySecret": ""
    },
    "Google": {
      "IsEnabled": "false",
      "ClientId": "",
      "ClientSecret": "",
      "UserInfoEndpoint": "https://www.googleapis.com/oauth2/v2/userinfo"
    },
    "Microsoft": {
      "IsEnabled": "true",
      "ConsumerKey": "21699ee8-3645-48da-ae11-bc33344be0f4",
      "ConsumerSecret": "<replace_me>",
      "TenantId": "1ae736c7-cf5a-4365-bbda-d3a7acb4e4d8"
    },
    "OpenId": {
      "IsEnabled": "false",
      "ClientId": "21699ee8-3645-48da-ae11-bc33344be0f4",
      "Authority": "https://login.microsoftonline.com/1ae736c7-cf5a-4365-bbda-d3a7acb4e4d8/v2.0",
      "LoginUrl": "https://login.microsoftonline.com/1ae736c7-cf5a-4365-bbda-d3a7acb4e4d8/oauth2/v2.0/authorize",
      "ValidateIssuer": "false",
      "ClaimsMapping": [
        {
          "claim": "unique_name",
          "key": "preferred_username"
        }
      ]
    },
    "WsFederation": {
      "IsEnabled": "false",
      "Authority": "",
      "ClientId": "",
      "Tenant": "",
      "MetaDataAddress": ""
    },
    "JwtBearer": {
      "IsEnabled": "true",
      "SecurityKey": "FranchiseePortal_8CFB2EC534E14D56",
      "Issuer": "FranchiseePortal",
      "Audience": "FranchiseePortal"
    }
  },
  "Configuration": {
    "AzureKeyVault": {
      "IsEnabled": "false",
      "KeyVaultName": "",
      "AzureADApplicationId": "",
      "AzureADCertThumbprint": "",
      "ClientId": "",
      "ClientSecret": ""
    }
  },
  "Twilio": {
    "AccountSid": "",
    "AuthToken": "",
    "SenderNumber": ""
  },
  "Recaptcha": {
    "SiteKey": "6LeEZ-kUAAAAAGdgiM9BoWiRKBZOeULch73OlyZP",
    "SecretKey": "6LeEZ-kUAAAAADBrLM1zkIy0mF_4rbBp3toA6zIJ"
  },
  "IdentityServer": {
    "IsEnabled": "false",
    "Authority": "https://localhost:44301/",
    "ApiName": "default-api",
    "ApiSecret": "secret",
    "Clients": [
      {
        "ClientId": "client",
        "AllowedGrantTypes": [
          "password"
        ],
        "ClientSecrets": [
          {
            "Value": "def2edf7-5d42-4edc-a84a-30136c340e13"
          }
        ],
        "AllowedScopes": [
          "default-api"
        ]
      },
      {
        "ClientId": "demo",
        "ClientName": "MVC Client Demo",
        "AllowedGrantTypes": [
          "hybrid"
        ],
        "RequireConsent": "true",
        "ClientSecrets": [
          {
            "Value": "def2edf7-5d42-4edc-a84a-30136c340e13"
          }
        ],
        "RedirectUris": [
          "http://openidclientdemo.com:8001/signin-oidc"
        ],
        "PostLogoutRedirectUris": [
          "http://openidclientdemo.com:8001/signout-callback-oidc"
        ],
        "AllowedScopes": [
          "openid",
          "profile",
          "default-api"
        ],
        "AllowOfflineAccess": "true"
      }
    ]
  },
  "Payment": {
    "PayPal": {
      "IsActive": "true",
      "Environment": "sandbox",
      "BaseUrl": "https://api.sandbox.paypal.com/v1",
      "ClientId": "",
      "ClientSecret": "",
      "DemoUsername": "",
      "DemoPassword": "",
      "DisabledFundings": []
    },
    "Stripe": {
      "IsActive": "true",
      "BaseUrl": "https://api.stripe.com/v1",
      "SecretKey": "",
      "PublishableKey": "",
      "WebhookSecret": "",
      "PaymentMethodTypes": [ "card" ]
    }
  },
  "HealthChecks": {
    "HealthChecksEnabled": true, //enable/disable all health checks.
    "HealthChecksUI": {
      "HealthChecksUIEnabled": false, //enable/disable health checks ui
      "HealthChecks": [
        {
          "Name": "FranchiseePortal.Web.Host",
          "Uri": "https://localhost:44301/health"
        }
      ],
      "EvaluationTimeOnSeconds": 10,
      "MinimumSecondsBetweenFailureNotifications": 60
    }
  },
  "KestrelServer": {
    "IsEnabled": false
  },
  "Swagger": {
    "ShowSummaries": false
  },
  "Goddard": {
    "Diagnostics": {
      "HealthCheck": {
        // Path to health check endpoint
        // Defaults to "/health" if not specified
        "Path": "/health"
      }
    },
    "Logging": {
      "HttpLogging": {
        // Max size of body to log
        // Default is 32,768 bytes if not specified
        "BodyLogLimit": 32768
      }
    }
  },
  "Serilog": {
    "Using": [
      "Goddard.AspNetCore.Instrumentation",
      "Serilog.Sinks.Console",
      "Serilog.Sinks.File",
      "Serilog.Sinks.ApplicationInsights",
      "Serilog.Expressions"
    ],
    "MinimumLevel": {
      "Default": "Information",
      "Override": {
        // Logging category to include request/response header/body details in request logging.
        // This is separate from the "Serilog.AspNetCore.RequestLoggingMiddleware" request logging category
        // so that we can log add'l details only for warning/error conditions
        "Goddard.AspNetCore.HttpLogging.Details": "Warning",
        "Microsoft": "Warning",
        "Microsoft.Hosting.Lifetime": "Information",
        // Logging category for request logging.  Levels will log based on requests as follows:
        // Verbose:     All response codes including health checks
        // Information: All response codes not including health checks
        // Warning:     >= 400 response code
        // Error:       >= 500 response codes
        "Serilog.AspNetCore.RequestLoggingMiddleware": "Information",
        "Microsoft.EntityFrameworkCore.Database.Command": "Warning"
      }
    },
    "Filter": [
      {
        "Name": "ByExcluding",
        "Args": {
          "expression": "@mt = 'An unhandled exception has occurred while executing the request.'"
        }
      }
    ],
    "Enrich": [ "WithOperationId", "FromLogContext" ],
    "WriteTo": [      
      {
        "Name": "Async",
        "Args": {
          "configure": [
            // 0 - Console sink
            {
              "Name": "Console",
              "Args": {
                "outputTemplate": "{Timestamp:yyyy-MM-ddTHH:mm:ss.fffffff} [{MachineName}/P{ProcessId}/D{AppDomainId}/T{ThreadId}] *{Level:u3}* [{HttpRequestId}] {SourceContext} {Message:lj}{NewLine}{Exception}",
                "restrictedToMinimumLevel": "Information"
              }
            },
            // 1 - File sink
            // Writing to the Azure Diagnostics Log Stream
            // based on: https://github.com/serilog/serilog-aspnetcore#writing-to-the-azure-diagnostics-log-stream
            {
              "Name": "File",
              "Args": {
                "path": "%HOME%/LogFiles/Applications/diagnostics.txt",
                "rollingInterval": "Day",
                "fileSizeLimitBytes": 10485760,
                "retainedFileCountLimit": 2,
                "rollOnFileSizeLimit": true,
                "shared": true,
                // flushToDiskInterval is in seconds.
                // credit: https://stackoverflow.com/a/59473826
                "flushToDiskInterval": 1
              }
            },
            // 2 - AI sink
            {
              "Name": "ApplicationInsights",
              "Args": {
                // Not considered a secret: https://learn.microsoft.com/en-us/azure/azure-monitor/app/sdk-connection-string?tabs=dotnet5#is-the-connection-string-a-secret
                // DEV - ipaas-franchiseeportal-dev-useast-api
                "connectionString": "InstrumentationKey=00f7a74d-8e35-4b5f-b0d8-1cc35cbf8de5;IngestionEndpoint=https://eastus-8.in.applicationinsights.azure.com/;LiveEndpoint=https://eastus.livediagnostics.monitor.azure.com/",
                "telemetryConverter": "Goddard.AspNetCore.Logging.ApplicationInsights.CustomTraceTelemetryConverter, Goddard.AspNetCore.Instrumentation"
              }
            }
          ]
        }
      }
    ],
    "Properties": {
      "Application": "FranchiseePortal.Web"
    }
  }
}
